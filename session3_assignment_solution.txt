import google.generativeai as genai

import openai



Configure API keys (replace with your actual keys)
GOOGLE_API_KEY = "your_google_api_key_here"

OPENAI_API_KEY = "your_openai_api_key_here"



Configure the Gemini model
genai.configure(api_key=GOOGLE_API_KEY)

gemini_model = genai.GenerativeModel('gemini-pro')



Configure the OpenAI client
openai.api_key = OPENAI_API_KEY



def analyze_sentiment(text):

  """Use Gemini to determine the sentiment of the text."""

  prompt = f"Analyze the sentiment of this text and respond with only 'positive', 'negative', or 'neutral': {text}"

  response = gemini_model.generate_content(prompt)

  return response.text.strip().lower()



def categorize_text(text):

  """Use ChatGPT to categorize the text into a single word."""

  prompt = f"Categorize this text into a single word category: {text}"

  response = openai.ChatCompletion.create(

    model="gpt-3.5-turbo",

    messages=[

      {"role": "system", "content": "You are a text categorization assistant. Respond with only a single word category."},

      {"role": "user", "content": prompt}

    ],

    max_tokens=1

  )

  return response.choices[0].message.content.strip()



def analyze_texts(texts):

  """Process a list of texts and print the results."""

  for text in texts:

    sentiment = analyze_sentiment(text)

    category = categorize_text(text)

    print(f"Text: {text}")

    print(f"Sentiment: {sentiment}")

    print(f"Category: {category}")

    print()



sample_texts = [

  "I love using new technology!",

  "The weather is terrible today.",

  "Just finished reading an interesting book on history."

]



analyze_texts(sample_texts)